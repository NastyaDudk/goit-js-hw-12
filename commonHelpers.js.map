{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport axios from 'axios';\n\nfunction renderCardImage(arr) {\n  const markup = arr.map(item => cardTemplate(item)).join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nconst lightbox = new SimpleLightbox('.photo-card a', {\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet currentPage = 1;\nlet currentHits = 0;\nlet searchQuery = '';\n\nsearchForm.addEventListener('submit', onSubmitSearchForm);\n\nasync function onSubmitSearchForm(e) {\n  e.preventDefault();\n  searchQuery = e.currentTarget.searchQuery.value;\n  currentPage = 1;\n\n  if (searchQuery === '') {\n    return;\n  }\n\n  const response = await fetchImages(searchQuery, currentPage);\n  currentHits = response.hits.length;\n\n  if (response.totalHits > 15) {\n    loadMoreBtn.classList.remove('is-hidden');\n  } else {\n    loadMoreBtn.classList.add('is-hidden');\n  }\n\n  try {\n    if (response.totalHits > 0) {\n      Notify.success(`Hooray! We found ${response.totalHits} images.`);\n      gallery.innerHTML = '';\n      renderCardImage(response.hits);\n      lightbox.refresh();\n      endCollectionText.classList.add('is-hidden');\n\n      const cardHeight =\n        gallery.firstElementChild.getBoundingClientRect().height;\n\n      window.scrollBy({\n        top: cardHeight * 2,\n        behavior: 'smooth',\n      });\n    }\n\n    if (response.totalHits === 0) {\n      gallery.innerHTML = '';\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      loadMoreBtn.classList.add('is-hidden');\n      endCollectionText.classList.add('is-hidden');\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nloadMoreBtn.addEventListener('click', onClickLoadMoreBtn);\n\nasync function onClickLoadMoreBtn() {\n  currentPage += 1;\n  const response = await fetchImages(searchQuery, currentPage);\n  renderCardImage(response.hits);\n  lightbox.refresh();\n  currentHits += response.hits.length;\n\n  if (currentHits === response.totalHits) {\n    loadMoreBtn.classList.add('is-hidden');\n    endCollectionText.classList.remove('is-hidden');\n  }\n}\n"],"names":["renderCardImage","arr","markup","item","lightbox","SimpleLightbox","currentPage","currentHits","searchQuery","onSubmitSearchForm","e","response","cardHeight","error","onClickLoadMoreBtn"],"mappings":"svBAMA,SAASA,EAAgBC,EAAK,CAC5B,MAAMC,EAASD,EAAI,IAAIE,GAAQ,aAAaA,CAAI,CAAC,EAAE,KAAK,EAAE,EAC1D,QAAQ,mBAAmB,YAAaD,CAAM,CAChD,CAEA,MAAME,EAAW,IAAIC,EAAe,gBAAiB,CACnD,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAED,IAAIC,EAAc,EACdC,EAAc,EACdC,EAAc,GAElB,WAAW,iBAAiB,SAAUC,CAAkB,EAExD,eAAeA,EAAmBC,EAAG,CAKnC,GAJAA,EAAE,eAAc,EAChBF,EAAcE,EAAE,cAAc,YAAY,MAC1CJ,EAAc,EAEVE,IAAgB,GAClB,OAGF,MAAMG,EAAW,MAAM,YAAYH,EAAaF,CAAW,EAC3DC,EAAcI,EAAS,KAAK,OAExBA,EAAS,UAAY,GACvB,YAAY,UAAU,OAAO,WAAW,EAExC,YAAY,UAAU,IAAI,WAAW,EAGvC,GAAI,CACF,GAAIA,EAAS,UAAY,EAAG,CAC1B,OAAO,QAAQ,oBAAoBA,EAAS,mBAAmB,EAC/D,QAAQ,UAAY,GACpBX,EAAgBW,EAAS,IAAI,EAC7BP,EAAS,QAAO,EAChB,kBAAkB,UAAU,IAAI,WAAW,EAE3C,MAAMQ,EACJ,QAAQ,kBAAkB,sBAAuB,EAAC,OAEpD,OAAO,SAAS,CACd,IAAKA,EAAa,EAClB,SAAU,QAClB,CAAO,CACF,CAEGD,EAAS,YAAc,IACzB,QAAQ,UAAY,GACpB,OAAO,QACL,0EACR,EACM,YAAY,UAAU,IAAI,WAAW,EACrC,kBAAkB,UAAU,IAAI,WAAW,EAE9C,OAAQE,EAAP,CACA,QAAQ,MAAMA,CAAK,CACpB,CACH,CAEA,YAAY,iBAAiB,QAASC,CAAkB,EAExD,eAAeA,GAAqB,CAClCR,GAAe,EACf,MAAMK,EAAW,MAAM,YAAYH,EAAaF,CAAW,EAC3DN,EAAgBW,EAAS,IAAI,EAC7BP,EAAS,QAAO,EAChBG,GAAeI,EAAS,KAAK,OAEzBJ,IAAgBI,EAAS,YAC3B,YAAY,UAAU,IAAI,WAAW,EACrC,kBAAkB,UAAU,OAAO,WAAW,EAElD"}